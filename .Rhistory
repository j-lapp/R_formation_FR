sampling_frame  <- load_samplingframe(file ="input/echantillon/sampling_frame_clean.csv")
questionnaire   <- load_questionnaire(data = assessment_data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label"
)
analysisplan    <- load_analysisplan("input/dap/dap_msna2020.csv")
assessment_data$strata <- paste0(assessment_data$admin1, "_", assessment_data$group_pop)
weights <- map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata", # la colonne strata pour joigner cote des donnees
sampling.frame.population.column = "population", # colonne avec population dans l'echantillon
sampling.frame.stratum.column = "strata"  # la colonne strata pour joigner cote d'echantillon
)
results <- from_analysisplan_map_to_output(assessment_data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire,
confidence_level = 0.9)
results <- from_analysisplan_map_to_output(assessment_data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire,
confidence_level = 0.9)
assessment_data <- load_data(file = "input/donnees/bfa2002_msna_jour35_nettoyage_2020.csv") %>%
filter(group_pop == "pop_local" | group_pop == "pdi")
sampling_frame  <- load_samplingframe(file ="input/echantillon/sampling_frame_clean.csv")
questionnaire   <- load_questionnaire(data = assessment_data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label"
)
analysisplan    <- load_analysisplan("input/dap/dap_msna2020.csv")
assessment_data$strata <- paste0(assessment_data$admin1, "_", assessment_data$group_pop)
weights <- map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata", # la colonne strata pour joigner cote des donnees
sampling.frame.population.column = "population", # colonne avec population dans l'echantillon
sampling.frame.stratum.column = "strata"  # la colonne strata pour joigner cote d'echantillon
)
results <- from_analysisplan_map_to_output(assessment_data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire,
confidence_level = 0.9)
assessment_data <- load_data(file = "input/donnees/bfa2002_msna_jour35_nettoyage_2020.csv") %>%
filter(group_pop == "pop_local" | group_pop == "pdi")
sampling_frame  <- load_samplingframe(file ="input/echantillon/sampling_frame_clean.csv")
questionnaire   <- load_questionnaire(data = assessment_data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label"
)
analysisplan    <- load_analysisplan("input/dap/dap_msna2020.csv")
assessment_data <- load_data(file = "input/donnees/bfa2002_msna_jour35_nettoyage_2020.csv") %>%
filter(group_pop == "pop_local" | group_pop == "pdi")
sampling_frame  <- load_samplingframe(file ="input/echantillon/sampling_frame_clean.csv")
questionnaire   <- load_questionnaire(data = assessment_data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label"
)
analysisplan    <- load_analysisplan("input/dap/dap_msna2020.csv")
assessment_data$strata <- paste0(assessment_data$admin1, "_", assessment_data$group_pop)
weights <- map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata", # la colonne strata pour joigner cote des donnees
sampling.frame.population.column = "population", # colonne avec population dans l'echantillon
sampling.frame.stratum.column = "strata"  # la colonne strata pour joigner cote d'echantillon
)
results <- from_analysisplan_map_to_output(assessment_data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire,
confidence_level = 0.9)
map_to_master_table(results$results, "output/analysis_results.csv")
View(sampling_frame)
output <- map_to_master_table(results$results, "output/analysis_results.csv")
head(output)
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(data, aes(x=ic_age)) +
geom_histogram()
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(data, aes(x=ic_age)) +
geom_histogram()
# age des personnes IC dans la region de l'Est. Les bins defaut sont de 5.
hist(hsm_df$ic_age[hsm_df$admin1 == "Est"], main = "Age des IC en region Est")
hsm_df <- read.csv("donnees/tableaux/REG1903b_3_Frontiers_HSM_Burkina_Faso_2021-03-16.csv",
na.strings = c("NA", "", "N/A", "N.A.", "NnA"),
encoding = "UTF-8")
# age des personnes IC dans la region de l'Est. Les bins defaut sont de 5.
hist(hsm_df$ic_age[hsm_df$admin1 == "Est"], main = "Age des IC en region Est")
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(hsm_df, aes(x=ic_age)) +
geom_histogram()
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
hchart(hsm_df$ic_age, name = "hsm_df")
library(dplyr)
library(ggplot2)
library(plotly)
library(highcharter)
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
hchart(hsm_df$ic_age, name = "hsm_df")
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
hchart(hsm_df$ic_age[hsm_df$admin1 == "Est"], name = "hsm_df")
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(hsm_df$ic_age[hsm_df$admin1 == "Est"], aes(x=ic_age)) +
geom_histogram()
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
hchart(hsm_df$ic_age[hsm_df$admin1 == "Est"], name = "IC Age - Region Est")
View(hsm_df)
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
hchart(hsm_df$profession_ic[hsm_df$admin1 == "Est"], name = "IC Age - Region Est")
barplot(height=mean(hsm_df$ic_age), names=hsm_df$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="categories",
ylab="values",
main="My title",
ylim=c(0,40)
)
barplot(height=hsm_df$ic_age, names=hsm_df$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="categories",
ylab="values",
main="My title",
ylim=c(0,40)
)
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="categories",
ylab="values",
main="My title",
ylim=c(0,40)
)
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
)
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
ylim=c(0,45)
)
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
ylim=c(0,45)
)
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
ylim=c(0,60)
)
View(hsm_df)
ggplot(hsm_ic_age_admin1, aes(x=admin1, y=moy_ic_age)) +
geom_bar(stat = "identity")
hsm_ic_age_admin1 <- hsm_df %>%
group_by(admin1) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin1$moy_ic_age, names=hsm_ic_age_admin1$admin1,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
ylim=c(0,60)
)
ggplot(hsm_ic_age_admin1, aes(x=admin1, y=moy_ic_age)) +
geom_bar(stat = "identity") +
coord_flip()
hsm_ic_age_admin2 <- hsm_df %>%
group_by(admin2) %>%
summarize(moy_ic_age = mean(ic_age))
barplot(height=hsm_ic_age_admin2$moy_ic_age, names=hsm_ic_age_admin2$admin2,
col=rgb(0.8,0.1,0.1,0.6),
xlab="Region",
ylab="Age",
main="Moyenne age par region",
ylim=c(0,60)
)
table(hsm_df$statut_deplacement)
hsm_df_date <- hsm_df %>%
group_by(today, statut_deplacement) %>%
mutate(n = n())
graph_temps <-  hchart(hsm_df_date,
"line",
hcaes(x = today, y = n, group = statut_deplacement),
color = c("#D1D3D4", "#f5a6a7","#58585A"))
graph_temps
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(hsm_df$admin1, aes(x=ic_age)) +
geom_histogram()
hsm_df <- read.csv("donnees/tableaux/REG1903b_3_Frontiers_HSM_Burkina_Faso_2021-03-16.csv",
na.strings = c("NA", "", "N/A", "N.A.", "NnA"),
encoding = "UTF-8")
# age des personnes IC dans la region de l'Est. Les bins defaut sont de 5.
hist(hsm_df$ic_age[hsm_df$admin1 == "Est"], main = "Age des IC en region Est")
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(hsm_df$admin1, aes(x=ic_age)) +
geom_histogram()
# age des personnes IC dans la region de l'Est. Les bins sont de 5.
ggplot(hsm_df, aes(x=ic_age)) +
geom_histogram()
hsm_df_date <- hsm_df %>%
group_by(today) %>%
mutate(n = n())
graph_temps <-  hchart(hsm_df_date,
"line",
hcaes(x = today, y = n),
color = c("#D1D3D4", "#f5a6a7","#58585A"))
graph_temps
hsm_df_date <- hsm_df %>%
group_by(today) %>%
mutate(n = n())
View(hsm_df_date)
hsm_df_date <- hsm_df %>%
group_by(today) %>%
summarize(n = n())
View(hsm_df_date)
hsm_df_date <- hsm_df %>%
group_by(today, statut_deplacement) %>%
summarize(n = n())
graph_temps <-  hchart(hsm_df_date,
"line",
hcaes(x = today, y = n, group = statut_deplacement),
color = c("#D1D3D4", "#f5a6a7","#58585A"))
graph_temps
# faire le group by et summarize avec la date
hsm_df_date <- hsm_df %>%
group_by(today, statut_deplacement) %>%
summarize(n = n())
ggplot( aes(x=today, y=n, group=statut_deplacement, color=statut_deplacement)) +
geom_line()
# faire le group by et summarize avec la date
hsm_df_date <- hsm_df %>%
group_by(today, statut_deplacement) %>%
summarize(n = n())
ggplot(hsm_df_date, aes(x=today, y=n, group=statut_deplacement, color=statut_deplacement)) +
geom_line()
# faire le group by et summarize avec la date
hsm_df_date <- hsm_df %>%
group_by(today, statut_deplacement) %>%
summarize(n = n())
ggplot(hsm_df_date, aes(x=today, y=n, group=statut_deplacement, color=statut_deplacement)) +
geom_line()+
theme(legend.position="bottom")
hsm_df_deplace <- hsm_df %>%
group_by(statut_deplacement) %>%
summarize(n = n())
fig <- plot_ly(hsm_df, labels = ~statut_deplacement, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
hsm_df_deplace <- hsm_df %>%
group_by(statut_deplacement) %>%
summarize(n = n())
fig <- plot_ly(hsm_df, labels = ~statut_deplacement, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_deplace <- hsm_df %>%
group_by(statut_deplacement) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_deplace, labels = ~statut_deplacement, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_deplace, labels = ~profession_ic, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n, type = 'pie')
fig <- fig %>% add_pie(hole = 0.6)
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n, type = 'pie')
fig <- fig %>% add_pie(hole =2)
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n)
fig <- fig %>% add_pie(hole =2)
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n)
fig <- fig %>% add_pie(hole = 0.6)
fig <- fig %>% layout(title = 'Profession des IC',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
hsm_df_profession <- hsm_df %>%
group_by(profession_ic) %>%
summarize(n = n())
fig <- plot_ly(hsm_df_profession, labels = ~profession_ic, values = ~n)
fig <- fig %>% add_pie(hole = 0.6)
fig <- fig %>% layout(title = 'Profession des IC')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1, x = ~admin1, y = ~[ic_genre == "homme"], type = 'bar', name = 'IC genre')
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1, x = ~admin1, y = ~ic_genre, type = 'bar', name = 'IC genre')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1, x = ~admin1, y = ~n, type = 'bar', name = 'IC genre')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre="homme"), x = ~admin1, y = ~n, type = 'bar', name = 'IC genre')
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="homme"), x = ~admin1, y = ~n, type = 'bar', name = 'IC genre')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
View(hsm_genre_admin1)
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, type = 'bar', name = 'IC genre')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'group')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_genre_admin1 %>% filter(ic_genre=="Femme"), x = ~admin1, y = ~n, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
library(dplyr)
library(ggplot2)
library(plotly)
library(highcharter)
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
hsm_df <- read.csv("donnees/tableaux/REG1903b_3_Frontiers_HSM_Burkina_Faso_2021-03-16.csv",
na.strings = c("NA", "", "N/A", "N.A.", "NnA"),
encoding = "UTF-8")
hsm_genre_admin1 <- hsm_df %>%
group_by(admin1, ic_genre) %>%
summarize(n = n())
fig <- plot_ly(hsm_genre_admin1 %>% filter(ic_genre=="Homme"), x = ~admin1, y = ~n, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_genre_admin1 %>% filter(ic_genre=="Femme"), x = ~admin1, y = ~n, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n = n())
hsm_admin1_femme <- hsm_df %>%
filter(ic_genre == "Femme") %>%
group_by(admin1) %>%
summarize(n = n())
fig <- plot_ly(hsm_admin1_homme, x = ~admin1, y = ~n, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_admin1_femme, x = ~admin1, y = ~n, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
View(hsm_admin1_femme)
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = n())
hsm_admin1_femme <- hsm_df %>%
filter(ic_genre == "Femme") %>%
group_by(admin1) %>%
summarize(n_femme = n())
fig <- plot_ly(hsm_admin1_homme, x = ~admin1, y = ~n_homme, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(hsm_admin1_femme, x = ~admin1, y = ~n_femme, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = n())
hsm_admin1_femme <- hsm_df %>%
filter(ic_genre == "Femme") %>%
group_by(admin1) %>%
summarize(n_femme = n())
hsm_admin1_ic_genre <- left_join(hsm_admin1_homme, hsm_admin1_femme, by = "admin1")
fig <- plot_ly(hsm_admin1_ic_genre, x = ~admin1, y = ~n_homme, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(y = ~n_femme, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
?n
?count
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = count(n[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = count([ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = sum(n[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = sum(statut_deplacement[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = count(today[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = n(today[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = sum(today[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = sum(admin1[ic_genre=="Homme"]))
hsm_admin1_homme <- hsm_df %>%
filter(ic_genre == "Homme") %>%
group_by(admin1) %>%
summarize(n_homme = n())
hsm_admin1_femme <- hsm_df %>%
filter(ic_genre == "Femme") %>%
group_by(admin1) %>%
summarize(n_femme = n())
hsm_admin1_ic_genre <- left_join(hsm_admin1_homme, hsm_admin1_femme, by = "admin1")
fig <- plot_ly(hsm_admin1_ic_genre, x = ~admin1, y = ~n_homme, type = 'bar', name = 'Homme')
fig <- fig %>% add_trace(y = ~n_femme, name = 'Femme')
fig <- fig %>% layout(yaxis = list(title = 'n'), barmode = 'stack')
fig
