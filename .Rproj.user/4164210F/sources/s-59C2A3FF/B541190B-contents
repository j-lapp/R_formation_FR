
## 3. R Markdown
### 3. Rapports avec R Markdown
Lectures complémentaires:<br>
[RMarkdown cheatsheet](https://rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf) <br>
[RMarkdown sommaire](https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)


### R Markdown


R Markdown est un format permettant d'écrire des rapports dynamiques reproductibles avec R. Utilisez-le pour intégrer du code R et des résultats dans des diaporamas, des fichiers PDF, des documents html et documents Word. 

Documents de R Markdown ont l'extension "rmd". Pour combiner a un document mettez la commande "Knit" dans R Studio. 

Installez et chargez les packages de cette part de l'exercise.
``` {r echo=T, eval=F}
library(dplyr)


```


On define le document au debut avec ce syntaxe:
``` {r echo=T, eval=F}
---
title: "<center> REACH Burkina Faso - MSNA 2020 - Suivi </center>"
output: html_document

---

```

Normalment on utilise une combination de 'blocs de code' pour evaluer ensemble avec des paragraphes de explication. Ce document de formation a ete cree avec R Markdown.

Le syntaxe de un bloc de code c'est le suivant:
``` {r echo=T, eval=F}

# ``` {r }
# Code
#  ```

```


Les arguments pour evaluer les blocs de code sont:
``` {r echo=F, eval=T, warning =F}
markdown_args <- tribble(~operateur, ~defaut, ~description,
                         "include", "TRUE", "empêche le code et les résultats d'apparaître dans le fichier fini",
                "eval", "TRUE", "évaluer le code et inclure ses résultats",
                "echo", "TRUE", "Afficher ou non le code avec ses résultats",
                "warning", "TRUE", "afficher les avertissements",
                "error", "FALSE", "afficher les erreurs",
                "message", "TRUE", "afficher les messages",
                "tidy", "FALSE", "reformater en code propre",
                "results", "markup", "'hide': n'affichera pas les résultats du code dans le document final. 'hold': retardera l'affichage de toutes les sorties
blocs jusqu'à la fin du bloc. 'asis': knitr passera par les résultats sans les reformater"
                )

source("R/functions.R")

clean_table(markdown_args, 300)
```

Mettez ces arguments dans les accolades au debut du bloc.
``` {r echo=T, eval=F}

# ``` {r echo =F, eval =T, warning =F}
# Code
#  ```

```

#### Exercise

1. Creez un document de markdown dans le meme projet. Definez un document HTML au debut. Importez les donnees et le package dplyr dans un bloc de code.


### Group by et summarize dans Markdown
Dans REACH c'est bien comun utiliser les rapports Markdown pour surveiller le progrès des évaluations de besoins. Normalment utilisent des tableaux et graphiques crees avec packages et en utilisant des fonctions de dplyr comme group by et summarize.


``` {r echo=T, eval=F}

hsm_df <- read.csv("donnees/tableaux/REG1903b_3_Frontiers_HSM_Burkina_Faso_2021-03-16.csv", 
                   na.strings = c("NA", "", "N/A", "N.A.", "NnA"),
                   encoding = "UTF-8")

# groupez par admin
enquetes_hsm_admin1 <- hsm_df %>% 
  group_by(admin1) %>% 
  summarise(n_enquetes = n())

```

### Tableaux avec Formattable 

Avec formattable on peut creer des tableaux élégants. On passe comme les donnees comme un argument de la fonction formattable.

```{r eval=TRUE, echo=T, results='asis', warning=F, message = F}
library(formattable)
# groupez par admin
enquetes_hsm_admin1 <- hsm_df %>% 
  group_by(admin1) %>% 
  summarise(n_enquetes = n())
# creez le tableau
formattable(enquetes_hsm_admin1, list(
  n_enquetes = color_tile("lightpink", "lightgreen")))

```

Pour nous permetir sorter et ordonner le tableau on peut utiliser le fonction "as.datatable" ensemble avec "formattable".
```{r eval=TRUE, echo=T, results='asis', warning=F, message = F}
library(formattable)
# groupez par admin
enquetes_hsm_admin2 <- hsm_df %>% 
  group_by(admin1, admin2) %>% 
  summarise(n_enquetes = n())
# creez le tableau
as.datatable(formattable(enquetes_hsm_admin2, list(
  n_enquetes = color_bar("lightgreen"))))

```

#### Exercise

1. Creez deux tableaux avec les donnees HSM en utilisant group by, summarize et le package formattable. 
